name: Deploy product

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
env:
  AWS_REGION: us-east-1
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    environment:
      name: dev
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build
        shell: bash
        env:
          GH_USERNAME: ${{ vars.GH_USERNAME }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          ./mvnw -s .m2/settings.xml clean install -pl fastfood-product -Dmaven.test.skip=true -U -P dev

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          tags: icarodamiani/fastfood-product:latest
          push: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}

      - name: Update KubeConfig
        run: |
            aws eks update-kubeconfig --name "fiap-fastfood-t4-g86" --region=${{ env.AWS_REGION }}

      - name: Deploy Helm Chart To Amazon EKS Cluster
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.commit.outputs.short }}
        run: |
          helm upgrade --install fastfood-product charts/fastfood-product \
          --kubeconfig ./kube_config \
          --set containers.image=icarodamiani/fastfood-product \
          --set image.tag=latest \
          --set "env: - name: SPRING_PROFILES_ACTIVE 
          value: \"dev\" 
          - name: MONGODB_PASSWORD
          value: \"${{ secrets.MONGO_PASSWORD }}\" 
          - name: MONGODB_HOST 
          value: \"${{ vars.MONGO_HOST }}\" 
          - name: MONGODB_HOST 
          value: \"fastfood\" "